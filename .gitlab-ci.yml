# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: registry.pentacore.se/toolbox/php-7.4-build

stages:
  - build
  - docker
  - deploy
  # Select what we should cache between builds

build:resources:
  script:
    - cd web && COMPOSER_CACHE_DIR="../.composer-cache" composer install --ignore-platform-reqs -vvv
    - npm install --cache ../.npm-cache
    - npm run prod --cache ../.npm-cache
    - cd ..
  artifacts:
    untracked: true
  stage: build
  cache:
    paths:
      - .composer-cache
      - .npm-cache

docker:web:
  stage: docker
  services:
    - docker:dind
  dependencies:
    - build:resources
  needs:
    - build:resources
  only: 
    - master
  cache:
    paths:
      - .composer-cache
      - .npm-cache
  script:
    - sed 's/# DEPLOY //g' Dockerfile > Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE" . -f Dockerfile.deploy
    - docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY_IMAGE"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:db:
  stage: docker
  services:
    - docker:dind
  only:
    refs:
      - master
    changes:
      - db/**/*
      - db/*
      - .gitlab-ci.yml
  script:
    - sed 's/# DEPLOY //g' db/Dockerfile > db/Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE/db" db -f db/Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE/db"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:branch-web:
  stage: docker
  services:
    - docker:dind
  except:
    - master
  dependencies:
    - build:resources
  needs:
    - build:resources
  cache:
    paths:
      - .composer-cache
      - .npm-cache
  script:
    - sed 's/# DEPLOY //g' Dockerfile > Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" . -f Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:branch-db:
  stage: docker
  services:
    - docker:dind
  except:
    - master
  only:
    changes:
      - db/**/*
      - db/*
      - .gitlab-ci.yml
  script:
    - sed 's/# DEPLOY //g' db/Dockerfile > db/Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE/db" db -f db/Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE/db"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

deploy:prod:
  stage: deploy
  services:
    - docker:dind
  only:
    - master
  when: manual
  environment:
    name: prod
    url: https://hd.chalmers.se
  needs:
    - docker:web
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - ssh-add <(echo "$HD_SSH_PRIV_KEY")
    - /root/.composer/vendor/bin/envoy run prod-deploy --tag="$CI_COMMIT_SHA" --docker_user="$CI_REGISTRY_USER" --docker_password="$CI_REGISTRY_PASSWORD" --docker_registry=$CI_REGISTRY

deploy:staging:
  stage: deploy
  only:
    - master
  environment:
    name: staging
    url: https://staging.hd.chalmers.se
  services:
    - docker:dind
  needs:
    - docker:web
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - ssh-add <(echo "$HD_SSH_PRIV_KEY")
    - /root/.composer/vendor/bin/envoy run staging-deploy --docker_user="$CI_REGISTRY_USER" --docker_password="$CI_REGISTRY_PASSWORD" --docker_registry="$CI_REGISTRY"
    - curl -X http://hdgw.hd.chalmers.se:9000/api/webhooks/e7986dc9-2ec7-4325-bb00-53ac1302716b

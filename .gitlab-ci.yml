# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: git.hd.chalmers.se:5050/images/php-7.4-build

stages:
  - build
  - docker
  - deploy
  # Select what we should cache between builds

build:resources:
  script:
    - cd web && COMPOSER_CACHE_DIR="../.composer-cache" composer install --ignore-platform-reqs -vvv
    - npm install --cache ../.npm-cache
    - npm run prod --cache ../.npm-cache
    - cd ..
  artifacts:
    untracked: true
  only:
    changes:
      - web/**/*
      - Dockerfile
      - docker-entrypoint
      - php.ini
      - laravel-worker.conf
      - Envoy.blade.php
    refs:
      - master
  stage: build
  cache:
    paths:
      - .composer-cache
      - .npm-cache

docker:web:
  stage: docker
  dependencies:
    - build:resources
  needs:
    - build:resources
  only:
    changes:
      - web/**/*
      - Dockerfile
      - docker-entrypoint
      - php.ini
      - laravel-worker.conf
      - Envoy.blade.php
    refs:
      - master
  cache:
    paths:
      - .composer-cache
      - .npm-cache
  script:
    - sed 's/# DEPLOY //g' Dockerfile > Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE" . -f Dockerfile.deploy
    - docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY_IMAGE"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:db:
  stage: docker
  only:
    refs:
      - master
    changes:
      - db/**/*
      - db/*
      - .gitlab-ci.yml
  script:
    - sed 's/# DEPLOY //g' db/Dockerfile > db/Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE/db" db -f db/Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE/db"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:branch-web:
  stage: docker
  except:
    - master
  dependencies:
    - build:resources
  needs:
    - build:resources
  only:
    changes:
      - web/**/*
      - Dockerfile
      - docker-entrypoint
      - php.ini
      - laravel-worker.conf
      - Envoy.blade.php
  cache:
    paths:
      - .composer-cache
      - .npm-cache
  script:
    - sed 's/# DEPLOY //g' Dockerfile > Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" . -f Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker:branch-db:
  stage: docker
  except:
    - master
  only:
    changes:
      - db/**/*
      - db/*
      - .gitlab-ci.yml
  script:
    - sed 's/# DEPLOY //g' db/Dockerfile > db/Dockerfile.deploy
    - docker build --pull -t "$CI_REGISTRY_IMAGE/db" db -f db/Dockerfile.deploy
    - docker push "$CI_REGISTRY_IMAGE/db"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

deploy:prod:
  stage: deploy
  only:
    changes:
      - web/**/*
      - Dockerfile
      - docker-entrypoint
      - php.ini
      - laravel-worker.conf
      - Envoy.blade.php
    refs:
      - master
  when: manual
  environment:
    name: prod
    url: https://hd.chalmers.se
  needs:
    - docker:web
  image: curlimages/curl
  script:
    - curl -X POST http://10.13.37.4:9000/api/webhooks/5b3a9b93-8836-49ee-b6a6-09d079a617a5


deploy:staging:
  stage: deploy
  only:
    changes:
      - web/**/*
      - Dockerfile
      - docker-entrypoint
      - php.ini
      - laravel-worker.conf
      - Envoy.blade.php
    refs:
      - master
  environment:
    name: staging
    url: https://staging.hd.chalmers.se
  needs:
    - docker:web
  image: curlimages/curl
  script:
    - curl -X POST http://10.13.37.4:9000/api/webhooks/a1ecd156-bf84-4949-b681-89cae144750f

